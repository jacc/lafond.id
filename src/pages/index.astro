---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { ViewTransitions } from "astro:transitions";
import "../styles/app.css";

const work = [
  {
    company: "Apple",
    title: "",
    description: "technical specialist",
    time: "present",
    icon: "/apple.png",
    link: "https://apple.com",
  },
  {
    company: "ReliaQuest",
    title: "Sec Ops Intern",
    description: "incident response, digital asset protection",
    time: "2023/24",
    icon: "/reliaquest_logo.jpeg",
    link: "https://reliaquest.com",
  },
  {
    company: "Retro",
    title: "Marketing Intern",
    description: "social media, influencer outreach, ambassador program",
    time: "2023",
    icon: "/retro_logo.jpeg",
    link: "https://retro.app",
  },
  {
    company: "Whop",
    title: "DevRel",
    description: "customer support, documentation",
    time: "2023",
    icon: "/whop_io_logo.jpeg",
    link: "https://whop.com",
  },
  {
    company: "Basic.Space",
    title: "Marketing",
    description: "web3 expansion, Discord community management",
    time: "2022/23",
    icon: "/basicspace_logo.jpeg",
    link: "https://basic.space",
  },
  {
    company: "OpenSea",
    title: "Community Manager",
    description: "Discord community management",
    time: "2022",
    icon: "/opensea_io_logo.jpeg",
    link: "https://opensea.io",
  },
  {
    company: "Creature World",
    title: "Community Tech",
    description: "community scaffolding, bot development",
    time: "2021/22/23",
    icon: "/creature_world_logo.jpeg",
    link: "https://creature.world",
  },
  {
    company: "Reincubate",
    title: "QA/Test Engineer",
    description: "bug triage, test automation",
    time: "2021",
    icon: "/reincubate_logo.jpeg",
    link: "https://reincubate.com",
  },
];

const projects = [
  {
    name: "stardew.app",
    description: "a Stardew Valley perfection tool",
    link: "https://stardew.app",
    icon: "https://stardew.app/favicon.png",
  },
  {
    name: "stardew.me",
    description: "a Stardew Valley image generation tool",
    link: "https://stardew.me",
    icon: "https://stardew.me/assets/logo.png",
  }
];

const experiments = [
  {
    name: "RecipeBot",
    description: "scrape and synthesize social media recipe posts using AI",
    link: "https://recipebot.trinket.engineering",
  },
    {
    name: "Waffle House Index",
    description: "how I tracked closed Waffle Houses during hurricane season",
    link: "https://www.youtube.com/watch?v=TBrR3AEutsI",
    icon: "https://symbl-world.akamaized.net/i/webp/d4/4e02e79c4ad165cd067f3bf4328c81.webp",
  },
  {
    name: "stats360.co",
    description: "(now broken) reverse engineered Life360 dashboard",
    link: "",
  },
  {
    name: "StreamTicker",
    description: "Discord bot providing social media account stats",
    link: "https://github.com/streamticker/streamticker",
  },
  {
    name: "tunes.ninja",
    description: "Discord bot converting streaming service links",
    link: "https://github.com/jacc/tunes.ninja",
  },
  {
    name: "music-box",
    description: "GitHub award winning Last.fm integration gist",
    link: "https://github.com/jacc/music-box",
  },
];

const additionals = [
  {
    name: "💼 LinkedIn",
    link: "https://linkedin.com/in/jacklafond",
  },
  {
    name: "💌 Email",
    link: "mailto:jack@lafond.id",
  },
  {
    name: "👋 Personal",
    link: "https://jack.bio",
  },
  {
    name: "🧑‍💻 GitHub",
    link: "https://github.com/jacc",
  },
];

const blog = await getCollection("blog");

const posts = blog
  .sort(
    (a, b) =>
      new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime(),
  )
  .map((post) => ({
    params: { slug: post.slug, title: post.data.title, link: post.data.link },
    props: post,
  }));
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Jack LaFond</title>
    <link
      rel="preload"
      href="/fonts/BerkeleyMono-Regular.woff2"
      as="font"
      type="font/woff2"
      crossorigin
    />
    <ViewTransitions />
    <script
      defer
      data-domain="jacklafond.com"
      src="https://plausible.verbose.faith/js/script.js"></script>
  </head>
  <div class="flex h-screen p-8 max-w-4xl m-auto" transition:animate="fade">
    <div class="my-auto w-full">
      <div class="flex space-x-12 font-mono">
        <p class="font-bold text-2xl font-mono">Jack LaFond</p>
      </div>
      <div>
        <p class="font-mono">
          MBA candidate, cybersecurity professional, and self-taught software engineer living in
          Tampa, FL. <br /><br />Passionate about learning what makes computers
          tick, building tools to make life easier, and helping others along the way.
        </p>
      </div>
      <div class="mt-8">
        <p class="font-bold font-mono text-xl">Experience</p>
        <div class="mt-4 space-y-3 md:space-y-1">
          {
            work.map((project) => (
              <a class="grid md:flex md:justify-between" href={project.link}>
                <div class="flex space-x-2">
                  <Image
                    src={project.icon}
                    alt="Project icon."
                    width="24"
                    height="24"
                    class="rounded-md"
                  />
                  <p class="font-mono font-bold whitespace-nowrap hover:underline hover:cursor-pointer">
                    {project.company} ({project.time})
                  </p>
                </div>
                <p class="font-mono">{project.description}</p>
              </a>
            ))
          }
        </div>
      </div>
      <div class="mt-8">
        <p class="font-bold font-mono text-xl">Projects</p>
        <div class="mt-4 space-y-3 md:space-y-1">
          {
            projects.map((project) => (
              <a class="grid md:flex md:justify-between" href={project.link}>
                <div class="flex space-x-2">
                  <Image
                    src={project.icon}
                    alt="Project icon."
                    width="24"
                    height="24"
                    class="rounded-md"
                  />
                  <p class="font-mono font-bold whitespace-nowrap hover:underline hover:cursor-pointer">
                    {project.name}
                  </p>
                </div>
                <p class="font-mono">{project.description}</p>
              </a>
            ))
          }
        </div>
      </div>
      <div class="mt-8">
        <p class="font-bold font-mono text-xl">Experiments</p>
        <div class="mt-4 space-y-3 md:space-y-1">
          {
            experiments.map((project) => (
              <a class="grid md:flex md:justify-between" href={project.link}>
                <div class="flex space-x-2">
                  <p class="font-mono font-bold whitespace-nowrap hover:underline hover:cursor-pointer">
                    {project.name}
                  </p>
                </div>
                <p class="font-mono">{project.description}</p>
              </a>
            ))
          }
        </div>
      </div>
      <div class="mt-8">
        <p class="font-bold font-mono text-xl">Posts</p>
        <div class="mt-4 space-y-3 md:space-y-1">
          {
            posts.map((post) => (
              <a
                class="grid md:flex md:justify-between"
                href={
                  !post.props.data.link
                    ? `/blog/${post.props.slug}`
                    : post.props.data.link
                }
              >
                <div class="flex items-center">
                  <div class="flex space-x-2">
                    <Image
                      src={post.props.data.homeIcon || "/default-icon.png"}
                      alt="icon to blog post"
                      width="24"
                      height="24"
                      class="rounded-md"
                    />
                    <p class="font-mono font-bold whitespace-nowrap hover:underline hover:cursor-pointer">
                      {post.props.data.title}
                    </p>
                  </div>
                </div>
                <p class="font-mono text-black truncate">
                  {post.props.data.description}
                </p>
              </a>
            ))
          }
        </div>
      </div>
      <div class="mt-8">
        <hr class="my-4 border-gray-300" />
        <div class="mt-4">
          <div class="grid md:flex md:justify-between">
            {
              additionals.map((project) => (
                <a
                  href={project.link}
                  class="hover:underline hover:cursor-pointer"
                >
                  <p class="font-bold font-mono">{project.name}</p>
                </a>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</html>
